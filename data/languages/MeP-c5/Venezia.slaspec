@define ENDIAN "little"

define endian=$(ENDIAN);
define alignment=2;

@define VL64_OPT 1
@define LARGE_CP_REGNUM 1
@define NO_DEFAULT_CP_INSTR 1

#TODO: which ones are correct?
@define MUL_OPT 1
@define DIV_OPT 1
@define BIT_OPT 1
@define LDZ_OPT 1
@define ABS_OPT 1
@define AVE_OPT 1
@define MIN_OPT 1
@define CLP_OPT 1
@define SAT_OPT 1
@define DBG_OPT 1

@define TIMER_CHANNELS 2

@include "MeP-c5.sinc"

#TODO: implement REPEAT and EREPEAT

define register offset=$(CP_CREG_OFFSET) size=4 [
	CSAR0  CC     _      _      COFR0  COFR1  COFA0  COFA1
	CPERM0 CPERM1 CPERM2 CPERM3 _      _      _      CSAR1
	ACC0_0 ACC0_1 ACC0_2 ACC0_3 ACC0_4 ACC0_5 ACC0_6 ACC0_7
	ACC1_0 ACC1_1 ACC1_2 ACC1_3 ACC1_4 ACC1_5 ACC1_6 ACC1_7
];

define register offset=$(CP_CREG_OFFSET) size=32 [
	_ _ ACC0 ACC1
];

#
#p1 instruction is always in the bottom 28-bits
#

#V1:
#		63  - 16-bit Core -  48 | 47  - p0s -  28 | 27  - p1 -  0
#
#V2:
#       63  - 32-bit Core -  32 | 31  - xxx -  28 | 27  - p1 -  0
#
#V3 (CP code56):
#		63 - 1111 - 60 | 59 - p0 - 52 | 51 - 0111 - 48 | 47 - p0 (cont) - 28 | 27 - p1 - 0
#
#C3 (CP code24 in Core mode):
#		31 - 1111 - 28 | 27 - c3 - 20 | 19 - 0111 - 16 | 15 - c3 - 0
#
# p0 is handled in CP code56
# c3 is handled in CP code24
#

with :OM=1 {
	
}


